/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author lam_m
 */
public class NuevaLista extends javax.swing.JFrame {

    /**
     * Creates new form NuevaLista
     */
    static String usuarioCreador;
    public NuevaLista(String usuario) {
        this.usuarioCreador = usuario;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Agregar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nombreLista = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Descripcion = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Agregar.setText("Agregar");
        Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre lista:");

        jLabel2.setText("Descripcion");

        jButton2.setText("Regresar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(24, 24, 24)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Descripcion)
                    .addComponent(nombreLista, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(Agregar))
                .addGap(158, 158, 158))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nombreLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(Descripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(Agregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarActionPerformed
        // TODO add your handling code here: 
        File u = new File("C:\\MEIA\\lista.txt");
        File m = new File("C:\\MEIA\\Master_lista.txt");
        File d_u = new File("C:\\MEIA\\desc_lista.txt");

        BufferedReader brp = null;
        FileReader frp = null;
        String linea = null;  
        Boolean creacion = true;
        Boolean existente = false;
        
        try{

            frp = new FileReader(u);
            brp = new BufferedReader(frp);
            String nombreL = "";
            while((linea=brp.readLine())!= null){
                nombreL = linea.substring(0,linea.indexOf("|"));
                if(nombreL.equals(nombreLista.getText())){
                    String Usuario = linea.substring((linea.indexOf("|") +1), linea.length());
                    Usuario = Usuario.substring(0,Usuario.indexOf("|"));
                    if (Usuario.equals(usuarioCreador)) {
                        JOptionPane.showMessageDialog(rootPane, "Ya existe una lista con ese nombre", "Error Message", JOptionPane.ERROR_MESSAGE);
                        existente = true;
                    }
                }
                creacion = false; 
            }
            brp.close();
            
            frp = new FileReader(m);
            brp = new BufferedReader(frp);
            while((linea=brp.readLine())!= null){
                nombreL = linea.substring(0,linea.indexOf("|"));
                if(nombreL.equals(nombreLista.getText())){
                    String Usuario = linea.substring((linea.indexOf("|") +1), linea.length());
                    Usuario = Usuario.substring(0,Usuario.indexOf("|"));
                    if (Usuario.equals(usuarioCreador)) {
                        JOptionPane.showMessageDialog(rootPane, "Ya existe una lista con ese nombre", "Error Message", JOptionPane.ERROR_MESSAGE);
                        existente = true;
                    }
                }
                creacion = false; 
            }
            brp.close();
            
            if(creacion && existente == false){
                frp = new FileReader(d_u);
                brp = new BufferedReader(frp);
                
                String lineazo = brp.readLine();
                brp.close();
                String fecha = LocalDateTime.now().toString();
       
                    FileWriter flw = new FileWriter(u,false);
                    
                    String nuevaLinea = nombreLista.getText() + "|" + usuarioCreador + "|" + Descripcion.getText() + "|0|" + fecha + "|1\r\n";
                    flw.write(nuevaLinea);
                    flw.close();

                    FileWriter flww = new FileWriter(d_u, false);
                    String nuevaDescrip = fecha + "|" + usuarioCreador + "|" + fecha + "|" + usuarioCreador + "|1|1|0|5";
                    flww.write(nuevaDescrip);
                    flww.close();
                    JOptionPane.showMessageDialog(rootPane, "La lista fue creada exitosamente", "Lista creada", JOptionPane.OK_OPTION);
            }
            else if(existente == false){
                frp = new FileReader(d_u);
                brp = new BufferedReader(frp);
                linea = brp.readLine();
                String[] informacion = linea.split("\\|");

                int maxR = Integer.parseInt(informacion[7]);
                int noReg = Integer.parseInt(informacion[4]);

                if (noReg == maxR) {
                    //Se deben mover todos los datos al master
                    frp = new FileReader(d_u);//Desc_lista
                    brp = new BufferedReader(frp);
                    String fecha = LocalDateTime.now().toString();
                    String lineazo = brp.readLine();
                    brp.close();
                    String[] info = lineazo.split("\\|");
                    String textoA = info[0] + "|" + info[1] + "|" + fecha + "|" + usuarioCreador + "|1|1|0|" + maxR;
                    FileWriter flww = new FileWriter(d_u, false);
                    flww.write(textoA);
                    flww.close();
                    
                    //Master
                    List lista = new ArrayList();
                    frp = new FileReader(m);//Letura de master
                    brp = new BufferedReader(frp);
                    while((linea=brp.readLine())!= null){
                        lista.add(linea);
                    }
                    frp = new FileReader(u);//Lectura de lista
                    brp = new BufferedReader(frp);
                    while((linea=brp.readLine())!= null){
                        lista.add(linea);
                    }
                    brp.close();

                    
                    flww = new FileWriter(m, false);
                    Collections.sort(lista);
                    for (int i = 0; i < lista.size(); i++) {
                         flww.write(lista.get(i).toString() + "\r\n");
                    }
                    flww.close();
                    
                    FileWriter flw = new FileWriter(u,false);                   
                    String nuevaLinea = nombreLista.getText() + "|" + usuarioCreador + "|" + Descripcion.getText() + "|0|" + fecha + "|1\r\n";
                    flw.write(nuevaLinea);
                    flw.close();
                    JOptionPane.showMessageDialog(rootPane, "La lista fue creada exitosamente", "Lista creada", JOptionPane.OK_OPTION);
                }else{
                 //Se puede escribir tranquilamente, actualizando los valores.   
                    FileWriter flw = new FileWriter(u,true);
                    String fecha = LocalDateTime.now().toString();
                    String nuevaLinea = nombreLista.getText() + "|" + usuarioCreador + "|" + Descripcion.getText() + "|0|" + fecha + "|1\r\n";
                    flw.write(nuevaLinea);
                    flw.close();
                    
                    //Se actualiza el descriptor
                    frp = new FileReader(d_u);
                    brp = new BufferedReader(frp);

                    String lineazo = brp.readLine();
                    brp.close();
                    String[] info = lineazo.split("\\|");
                    noReg++;
                    int regA = Integer.valueOf(info[5]);
                    regA++;
                    String textoA = info[0] + "|" + info[1] + "|" + fecha + "|" + usuarioCreador + "|" + noReg + "|" + regA + "|" + info[6] + "|" + maxR;
                    
                    FileWriter flww = new FileWriter(d_u, false);
                    flww.write(textoA);
                    flww.close();
                    JOptionPane.showMessageDialog(rootPane, "La lista fue creada exitosamente", "Lista creada", JOptionPane.OK_OPTION);
                }
                
            }
        }catch(HeadlessException | IOException e){

        }
            // }else{JOptionPane.showMessageDialog(rootPane, "Contraseña de nivel bajo", "Error Message", JOptionPane.ERROR_MESSAGE);}
    }//GEN-LAST:event_AgregarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new Usuario(usuarioCreador).setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NuevaLista(usuarioCreador).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Agregar;
    private javax.swing.JTextField Descripcion;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField nombreLista;
    // End of variables declaration//GEN-END:variables
}
