/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author lam_m
 */
public class EnviarCorreoUsuario extends javax.swing.JFrame {

    /**
     * Creates new form EnviarCorreo
     */
    static String user;
    String rutaArchivo;
    DefaultListModel model;
    
    public EnviarCorreoUsuario(String username) {
        initComponents();
        this.user = username;
        
        model = new DefaultListModel();
        Usuarios.setModel(model);
        
        File u = new File("C:\\MEIA\\usuario.txt");
        File m = new File("C:\\MEIA\\Master.txt");
        
        String linea = "";
        BufferedReader brp = null;
        FileReader frp = null;
        
        try{
            frp = new FileReader(u);
            brp = new BufferedReader(frp);
            String usernam = "";
            while((linea=brp.readLine())!= null){
                usernam = linea.substring(0,linea.indexOf("|"));
                if (!"admin".equals(usernam)) {
                     model.addElement(usernam);
                }
            }
            brp.close();
            
            frp = new FileReader(m);
            brp = new BufferedReader(frp);
            usernam = "";
            while((linea=brp.readLine())!= null){
                usernam = linea.substring(0,linea.indexOf("|"));
                if (!"admin".equals(usernam)) {
                     model.addElement(usernam);
                }
            }
            brp.close();
        }catch(Exception e){}
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Usuarios = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        Asunto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Mensaje = new javax.swing.JTextArea();
        Enviar = new javax.swing.JButton();
        Regresar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Para:");

        Usuarios.setBorder(new javax.swing.border.MatteBorder(null));
        Usuarios.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        Usuarios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(Usuarios);

        jLabel2.setText("Asunto");

        jLabel3.setText("Mensaje:");

        Mensaje.setColumns(20);
        Mensaje.setRows(5);
        jScrollPane2.setViewportView(Mensaje);

        Enviar.setText("Enviar");
        Enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnviarActionPerformed(evt);
            }
        });

        Regresar.setText("Regresar");
        Regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegresarActionPerformed(evt);
            }
        });

        jButton1.setText("Adjuntar Documento");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Asunto, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(59, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(27, 27, 27)
                .addComponent(Enviar)
                .addGap(64, 64, 64)
                .addComponent(Regresar)
                .addGap(72, 72, 72))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Asunto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Enviar)
                    .addComponent(Regresar)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnviarActionPerformed
        // TODO add your handling code here:
        String usuarioDestino = Usuarios.getSelectedValue();
        if (usuarioDestino != null && Mensaje.getText().length() > 0) {
            File co = new File("C:\\MEIA\\Correo.txt");
            try{
                
                String fecha = LocalDateTime.now().toString();
                FileReader frp = new FileReader(co);
                BufferedReader brp = new BufferedReader(frp);
                
                String linea = brp.readLine();
                brp.close();
                String nuevaLinea = "0|0|" + user + "|" + usuarioDestino + "|" + fecha + "|" + Asunto.getText() + "|" + Mensaje.getText() + "|" + rutaArchivo + "|1";
                if(linea == null){
                    FileWriter flw = new FileWriter(co,false);
                    flw.write(nuevaLinea);
                    flw.close();
                }else{
                    frp = new FileReader(co);
                    brp = new BufferedReader(frp);
                    
                    List nuevosDatos = new ArrayList<>();
                    while((linea=brp.readLine())!= null){
                        nuevosDatos.add(linea);
                    }
                    
                    Determinar(nuevaLinea, nuevosDatos);
                }
                JOptionPane.showMessageDialog(rootPane, "Correo enviado exitosamente");
            }catch(Exception e){}
            
        }else{
            //No se pueden dejar campos vacios
             JOptionPane.showMessageDialog(rootPane, "Faltan campos", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_EnviarActionPerformed

    private void RegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegresarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new Usuario(user).setVisible(true);
    }//GEN-LAST:event_RegresarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser dialogo = new JFileChooser();
        File ficheroImagen;
        rutaArchivo = "";
        int valor = dialogo.showOpenDialog(this);
        if (valor == JFileChooser.APPROVE_OPTION) {
            ficheroImagen = dialogo.getSelectedFile();
            rutaArchivo = ficheroImagen.getPath();
           
            Path destPath = new File(("C:\\MEIA\\Adjuntos")).toPath();
	    File sourceFile = ficheroImagen;
            Path sourcePath = sourceFile.toPath();
            try {
                Files.copy(sourcePath, destPath.resolve(sourcePath.getFileName()));
                String a = ficheroImagen.getName();
                String nuevaDireccion = "C:\\MEIA\\Adjuntos\\" + a;
                rutaArchivo = nuevaDireccion;
            } catch (IOException ex) {
                Logger.getLogger(Registrate.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EnviarCorreoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EnviarCorreoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EnviarCorreoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnviarCorreoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EnviarCorreoUsuario(user).setVisible(true);
            }
        });
    }
    
    public static void Determinar(String nueva, List datos){
        File co = new File("C:\\MEIA\\Correo.txt");
        
        try{
            String primeraLinea = (String) datos.get(0);
            String Izq = primeraLinea.substring(0,primeraLinea.indexOf("|"));
            String Der = primeraLinea.substring(primeraLinea.indexOf("|") + 1);
            String Info = Der.substring(Der.indexOf("|") + 1);

            String der = nueva.substring(nueva.indexOf("|") + 1);
            String info = der.substring(der.indexOf("|") + 1);
            
            if (datos.size() == 1) {
                if (info.compareTo(Info) >= 1) {
                    datos.set(0, "0|2|" + Info);
                }else{
                    datos.set(0, "2|0|" + Info);
                }
                datos.add(nueva);
            }else{
                boolean salir = false;
                int posicion = 0;
                
                while(salir == false){
                    if(info.compareTo(Info) >= 1){
                        Der = Der.substring(0, Der.indexOf("|"));
                        int de = Integer.valueOf(Der);
                        if (de == 0) {
                             datos.add(nueva);
                             datos.set(posicion, Izq + "|" + datos.size() + "|" + Info);
                             salir = true;
                        }else{
                            de--;
                            posicion = de;//VALIDAR
                            primeraLinea = (String) datos.get(posicion);
                            Izq = primeraLinea.substring(0,primeraLinea.indexOf("|"));
                            Der = primeraLinea.substring(primeraLinea.indexOf("|") + 1);
                            Info = Der.substring(Der.indexOf("|") + 1);
                        }
                    }else{
                        int iz = Integer.valueOf(Izq);
                        if (iz == 0) {
                             datos.add(nueva);
                             datos.set(posicion, datos.size() + "|" + Der.substring(0,Der.indexOf("|")) + "|" + Info);
                             salir = true;
                        }else{
                            iz--;
                            posicion = iz;//Hay que validar que si sea la posicion que corresponde
                            primeraLinea = (String) datos.get(posicion);
                            Izq = primeraLinea.substring(0,primeraLinea.indexOf("|"));
                            Der = primeraLinea.substring(primeraLinea.indexOf("|") + 1);
                            Info = Der.substring(Der.indexOf("|") + 1);
                        }
                    }
                }
               
            }
            FileWriter flw = new FileWriter(co,false);
            for (int i = 0; i < datos.size(); i++) {
                flw.write(datos.get(i) + "\r\n");
            }
            flw.close();
            
        }catch(Exception e ){}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Asunto;
    private javax.swing.JButton Enviar;
    private javax.swing.JTextArea Mensaje;
    private javax.swing.JButton Regresar;
    private javax.swing.JList<String> Usuarios;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
