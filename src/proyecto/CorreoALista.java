/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author lam_m
 */
public class CorreoALista extends javax.swing.JFrame {

    /**
     * Creates new form CorreoALista
     */
    static String usr;
    DefaultListModel model;
    static String rutaArchivo;
    
    public CorreoALista(String us) {
        initComponents();
        usr = us;
        model = new DefaultListModel();
        Listas.setModel(model);
        
        File u = new File("C:\\MEIA\\lista.txt");
        File m = new File("C:\\MEIA\\Master_lista.txt");
        BufferedReader brp = null;
        FileReader frp = null;
        
        try{ 
            frp = new FileReader(u);
            brp = new BufferedReader(frp);
            String nombreL = "";
            String linea;
            while((linea=brp.readLine())!= null){
                nombreL = linea.substring(0,linea.indexOf("|"));
                String Usuario = linea.substring((linea.indexOf("|") +1), linea.length());
                Usuario = Usuario.substring(0,Usuario.indexOf("|"));
                String status = linea.substring(linea.lastIndexOf("|") + 1);
                if(Usuario.equals(usr) && status.equals("1")){
                    model.addElement(nombreL);
                }
            }
            brp.close();
            
            frp = new FileReader(m);
            brp = new BufferedReader(frp);
            nombreL = "";
            linea = "";
            while((linea=brp.readLine())!= null){
                nombreL = linea.substring(0,linea.indexOf("|"));
                String Usuario = linea.substring((linea.indexOf("|") +1), linea.length());
                Usuario = Usuario.substring(0,Usuario.indexOf("|"));
                if(Usuario.equals(usr)){
                    model.addElement(nombreL);
                }
            }
            brp.close();
        }catch(Exception e){}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Listas = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        Asunto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Mensaje = new javax.swing.JTextArea();
        Enviar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Lista:");

        jScrollPane1.setViewportView(Listas);

        jLabel2.setText("Asunto");

        jLabel3.setText("Mensaje");

        Mensaje.setColumns(20);
        Mensaje.setRows(5);
        jScrollPane2.setViewportView(Mensaje);

        Enviar.setText("Enviar");
        Enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnviarActionPerformed(evt);
            }
        });

        jButton2.setText("Regresar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Adjuntar documento");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Asunto)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3)
                            .addGap(37, 37, 37)
                            .addComponent(Enviar))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Asunto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Enviar)
                        .addComponent(jButton3))
                    .addComponent(jButton2))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new Usuario(usr).setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        JFileChooser dialogo = new JFileChooser();
        File ficheroImagen;
        rutaArchivo = "";
        int valor = dialogo.showOpenDialog(this);
        if (valor == JFileChooser.APPROVE_OPTION) {
            ficheroImagen = dialogo.getSelectedFile();
            rutaArchivo = ficheroImagen.getPath();
           
            Path destPath = new File(("C:\\MEIA\\Adjuntos")).toPath();
	    File sourceFile = ficheroImagen;
            Path sourcePath = sourceFile.toPath();
            try {
                Files.copy(sourcePath, destPath.resolve(sourcePath.getFileName()));
                String a = ficheroImagen.getName();
                String nuevaDireccion = "C:\\MEIA\\" + a;
                rutaArchivo = nuevaDireccion;
            } catch (IOException ex) {
                Logger.getLogger(Registrate.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void EnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnviarActionPerformed
        // TODO add your handling code here:
        String listaUsuarios = Listas.getSelectedValue();
        if (!listaUsuarios.equals(null) && Mensaje.getText().length() > 0 && Asunto.getText().length() > 0) {
            
            File lu = new File("C:\\MEIA\\Lista_usuario.txt");
            try{
                
                FileReader frp = new FileReader(lu);
                BufferedReader brp = new BufferedReader(frp);
                String linea;
                while((linea=brp.readLine())!= null){
                    String nombreLista = linea.substring(0,linea.indexOf("|"));
                    
                    String usuario = linea.substring(linea.indexOf("|") + 1);
                    String usuarioDestino = usuario.substring(usuario.indexOf("|") + 1);
                    usuarioDestino = usuarioDestino.substring(0,usuarioDestino.indexOf("|"));
                    usuario = usuario.substring(0,usuario.indexOf("|"));
                    
                    String estatus = linea.substring(linea.lastIndexOf("|") + 1);
                    
                    if (usuario.equals(usr) && nombreLista.equals(listaUsuarios) && estatus.equals("1")) {
                        File co = new File("C:\\MEIA\\Correo.txt");
                        String fecha = LocalDateTime.now().toString();
                        FileReader frpq = new FileReader(co);
                        BufferedReader brpq = new BufferedReader(frpq);

                        String Linea = brpq.readLine();
                        brpq.close();
                        String nuevaLinea = "0|0|" + usr + "|" + usuarioDestino + "|" + fecha + "|" + Asunto.getText() + "|" + Mensaje.getText() + "|" + rutaArchivo + "|1";
                        if(Linea == null){
                            FileWriter flw = new FileWriter(co,false);
                            flw.write(nuevaLinea);
                            flw.close();
                        }else{
                            frpq = new FileReader(co);
                            brpq = new BufferedReader(frpq);

                            List nuevosDatos = new ArrayList<>();
                            while((Linea=brpq.readLine())!= null){
                                nuevosDatos.add(Linea);
                            }
                            brpq.close();
                            Determinar(nuevaLinea, nuevosDatos);
                        }
                    }
                }
                brp.close();
                JOptionPane.showMessageDialog(rootPane, "Correo enviado exitosamente a todos los usuarios");
                rutaArchivo = null;
            }catch(Exception e){}
            
        }else{
            JOptionPane.showMessageDialog(rootPane, "Llenar campos vacios");
        }
    }//GEN-LAST:event_EnviarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CorreoALista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CorreoALista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CorreoALista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CorreoALista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CorreoALista(usr).setVisible(true);
            }
        });
    }
        public static void Determinar(String nueva, List datos){
        File co = new File("C:\\MEIA\\Correo.txt");
        
        try{
            String primeraLinea = (String) datos.get(0);
            String Izq = primeraLinea.substring(0,primeraLinea.indexOf("|"));
            String Der = primeraLinea.substring(primeraLinea.indexOf("|") + 1);
            String Info = Der.substring(Der.indexOf("|") + 1);

            String der = nueva.substring(nueva.indexOf("|") + 1);
            String info = der.substring(der.indexOf("|") + 1);
            if (datos.size() == 1) {
                
                if (info.compareTo(Info) > 1) {
                    datos.set(0, "2|0|" + Info);
                }else{
                    datos.set(0, "0|2|" + Info);
                }
                datos.add(nueva);
            }else{
                boolean salir = false;
                int posicion = 0;
                
                while(salir == false){
                    if(info.compareTo(Info) >= 1){
                        Der = Der.substring(0, Der.indexOf("|"));
                        int de = Integer.valueOf(Der);
                        if (de == 0) {
                             datos.add(nueva);
                             datos.set(posicion, Izq + "|" + datos.size() + "|" + Info);
                             salir = true;
                        }else{
                            de--;
                            posicion = de;//VALIDAR
                            primeraLinea = (String) datos.get(posicion);
                            Izq = primeraLinea.substring(0,primeraLinea.indexOf("|"));
                            Der = primeraLinea.substring(primeraLinea.indexOf("|") + 1);
                            Info = Der.substring(Der.indexOf("|") + 1);
                        }
                    }else{
                        int iz = Integer.valueOf(Izq);
                        if (iz == 0) {
                             datos.add(nueva);
                             datos.set(posicion, datos.size() + "|" + Der.substring(0,Der.indexOf("|")) + "|" + Info);
                             salir = true;
                        }else{
                            iz--;
                            posicion = iz;//Hay que validar que si sea la posicion que corresponde
                            primeraLinea = (String) datos.get(posicion);
                            Izq = primeraLinea.substring(0,primeraLinea.indexOf("|"));
                            Der = primeraLinea.substring(primeraLinea.indexOf("|") + 1);
                            Info = Der.substring(Der.indexOf("|") + 1);
                        }
                    }
                }
               
            }
            FileWriter flw = new FileWriter(co,false);
            for (int i = 0; i < datos.size(); i++) {
                flw.write(datos.get(i) + "\r\n");
            }
            flw.close();
            
        }catch(Exception e ){}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Asunto;
    private javax.swing.JButton Enviar;
    private javax.swing.JList<String> Listas;
    private javax.swing.JTextArea Mensaje;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
