/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author lam_m
 */
public class AgregarUsuario extends javax.swing.JFrame {

    /**
     * Creates new form AgregarUsuario
     */
   DefaultListModel model;
   static String user;
   static String Lista;
   
    public AgregarUsuario(String User, String lista) {
        initComponents();
        user = User;
        Lista = lista;
        
        model = new DefaultListModel();
        Usuarios.setModel(model);
        
        File u = new File("C:\\MEIA\\usuario.txt");
        File m = new File("C:\\MEIA\\Master.txt");
        
        String linea = "";
        BufferedReader brp = null;
        FileReader frp = null;
        
        try{
            frp = new FileReader(u);
            brp = new BufferedReader(frp);
            String username = "";
            while((linea=brp.readLine())!= null){
                username = linea.substring(0,linea.indexOf("|"));
                if (!"admin".equals(username)) {
                     model.addElement(username);
                }
            }
            brp.close();
            
            frp = new FileReader(m);
            brp = new BufferedReader(frp);
            username = "";
            while((linea=brp.readLine())!= null){
                username = linea.substring(0,linea.indexOf("|"));
                if (!"admin".equals(username)) {
                     model.addElement(username);
                }
            }
            brp.close();
        }catch(Exception e){}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Usuarios = new javax.swing.JList<>();
        Confirmar = new javax.swing.JButton();
        Regresar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Descripcion = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Usuarios.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(Usuarios);

        Confirmar.setText("Confirmar");
        Confirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmarActionPerformed(evt);
            }
        });

        Regresar.setText("Regresar");
        Regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegresarActionPerformed(evt);
            }
        });

        Descripcion.setColumns(20);
        Descripcion.setRows(5);
        jScrollPane2.setViewportView(Descripcion);

        jLabel1.setText("Descripcion");

        jLabel2.setText("Usuarios");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Confirmar)
                            .addComponent(Regresar)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(170, 170, 170)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Confirmar)
                        .addGap(18, 18, 18)
                        .addComponent(Regresar)
                        .addGap(127, 127, 127))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegresarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new ModificarLista(user).setVisible(true);
    }//GEN-LAST:event_RegresarActionPerformed

    private void ConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmarActionPerformed
        // TODO add your handling code here:
        String usuarioAgregar = Usuarios.getSelectedValue();
        if (usuarioAgregar != null && Descripcion.getText().length() > 0) {
            File lu = new File("C:\\MEIA\\Lista_usuario.txt");
            File dlu = new File("C:\\MEIA\\Desc_Lista_usuario.txt");
            File ilu = new File("C:\\MEIA\\Indice_ListaUsuario.txt");
            File dilu = new File("C:\\MEIA\\Desc_Indice_ListaUsuario.txt");
            File Ml = new File("C:\\MEIA\\Master_lista.txt");
            File l = new File("C:\\MEIA\\lista.txt");
            
            try{
                FileReader frp = new FileReader(lu);
                BufferedReader brp = new BufferedReader(frp);
                String linea = "";
                Boolean creacion = true;
                Boolean accion = false;
                while((linea=brp.readLine())!= null){
                    creacion = false;
                    String nombreLista = linea;
                    String usuario = nombreLista.substring(nombreLista.indexOf("|") + 1);
                    String usuarioA = usuario.substring(usuario.indexOf("|") + 1);
                    String status = linea.substring(linea.lastIndexOf("|") + 1);
                    nombreLista = nombreLista.substring(0,nombreLista.indexOf("|"));
                    usuario = usuario.substring(0,usuario.indexOf("|"));
                    usuarioA = usuarioA.substring(0,usuarioA.indexOf("|"));
                    
                    if (nombreLista.equals(Lista) && usuario.equals(user) && usuarioA.equals(usuarioAgregar) && status.equals("1")) {
                        JOptionPane.showMessageDialog(rootPane, "Usuario ya asociado");
                        accion = true;
                        break;
                    }else if(nombreLista.equals(Lista) && usuario.equals(user) && usuarioA.equals(usuarioAgregar) && status.equals("0")){
                        //Solo deberia cambiar el status y actualizar en indice
                        accion = false;
                        break;
                        
                    }
                }
                if (creacion){//Creacion de todo
                    
                    //Creamos archivo listaUsuario
                    String entrada = Lista + "|" + user + "|" + usuarioAgregar + "|" + Descripcion.getText() + "|1";
                    FileWriter TextOut = new FileWriter(lu, false);
                    TextOut.write(entrada + "\r\n");
                    TextOut.close();   
                    
                    //Creacion de desc_listaUsuarios
                    String fecha = LocalDateTime.now().toString();
                    TextOut = new FileWriter(dlu, false);
                    TextOut.write(user + "|" + fecha + "|1|1|0");
                    TextOut.close();
                    
                    //Creacion del indice
                    TextOut = new FileWriter(ilu, false);
                    TextOut.write("1|1.1|" + Lista + "|" + user + "|" + usuarioAgregar + "|0|1");
                    TextOut.close();
                    
                    //Creacion de desc_indice
                    TextOut = new FileWriter(dilu, false);
                    //NoReg | Reg inicio | RegA | Reg I
                    TextOut.write("1|1|1|0");
                    TextOut.close();
                    
                    //Actulizamos lista o master_lista 
                    Boolean lista = false;
                    List datoS = new ArrayList<String>();
                    frp = new FileReader(l);
                    brp = new BufferedReader(frp);
                    datoS = new ArrayList<String>();
                    while((linea=brp.readLine())!= null){
                        String[] Info = linea.split("\\|");
                        if(Info[0].equals(Lista) && Info[1].equals(user)){
                            lista = true;
                            int numU = Integer.valueOf(Info[3]);
                            numU++;
                            String nueva = Info[0] + "|" + Info[1] + "|" + Info[2] + "|" + numU + "|" + Info[4] + "|1";
                            datoS.add(nueva);
                        }else{
                            datoS.add(linea);
                        }
                    }
                    brp.close();
                    if(lista){
                        //Sobreescribimos en la lista
                        TextOut = new FileWriter(l, false);
                        for (int i = 0; i < datoS.size(); i++) {
                            TextOut.write(datoS.get(i) + "\r\n");
                        }
                        TextOut.close();
                    }else{
                        frp = new FileReader(Ml);
                        brp = new BufferedReader(frp);
                        datoS = new ArrayList<String>();
                        while((linea=brp.readLine())!= null){
                            String [] Info = linea.split("\\|");
                            if(Info[0].equals(Lista) && Info[1].equals(user)){
                                lista = true;
                                int numU = Integer.valueOf(Info[3]);
                                numU++;
                                String nueva = Info[0] + "|" + Info[1] + "|" + Info[2] + "|" + numU + "|" + Info[4] + "|1";
                                datoS.add(nueva);
                            }else{
                                datoS.add(linea);
                            }
                        }
                        brp.close();
                        
                        //Sobreescribimos en Master_lista
                        TextOut = new FileWriter(Ml, false);
                        for (int i = 0; i < datoS.size(); i++) {
                            TextOut.write(datoS.get(i) + "\r\n");
                        }
                        TextOut.close();
                    }
                }else if(accion == false){//Agregamos tranquilamente a tu tio
                    //Añadimos a lista_usuario
                    String entrada = Lista + "|" + user + "|" + usuarioAgregar + "|" + Descripcion.getText() + "|1";
                    FileWriter TextOut = new FileWriter(lu, true);
                    TextOut.write(entrada + "\r\n");
                    TextOut.close();   

                    //Actualizamos el desc_lista
                    frp = new FileReader(dlu);
                    brp = new BufferedReader(frp);
                    linea = brp.readLine();
                    brp.close();

                    String usuarioC = linea;
                    String fecha = usuarioC.substring(usuarioC.indexOf("|") + 1);
                    String noReg = fecha.substring(fecha.indexOf("|") + 1);
                    String regA = noReg.substring(noReg.indexOf("|") + 1);
                    String regI = regA.substring(regA.indexOf("|") + 1);

                    usuarioC = usuarioC.substring(0, usuarioC.indexOf("|"));
                    fecha = fecha.substring(0, fecha.indexOf("|"));
                    noReg = noReg.substring(0, noReg.indexOf("|"));
                    regA = regA.substring(0, regA.indexOf("|"));

                    int noRe = Integer.valueOf(noReg);
                    noRe++;

                    int reA = Integer.valueOf(regA);
                    reA++;

                    String desc = usuarioC + "|" + fecha + "|" + noRe + "|" + reA + "|" + regI;
                    TextOut = new FileWriter(dlu, false);
                    TextOut.write(desc);
                    TextOut.close();

                    //Aqui va to'o lo complicao' shico'
                    int ultimoValor = 0;
                    List datos = new ArrayList<String>();
                    frp = new FileReader(ilu);
                    brp = new BufferedReader(frp);
                    while((linea=brp.readLine())!= null){
                        String valor = linea;
                        String posicion = valor.substring(valor.indexOf("|") + 1);
                        String nombreDeLista = posicion.substring(posicion.indexOf("|") + 1);
                        datos.add(nombreDeLista);
                        valor = valor.substring(0, valor.indexOf("|"));
                        int valour = Integer.valueOf(valor);
                        ultimoValor = valour;
                    }brp.close();
                    ultimoValor++;
                    //Creamos parcialmente la nueva linea
                    String nuevaLinea = Lista + "|" + user + "|" + usuarioAgregar; 
                    
                    frp = new FileReader(dilu);
                    brp = new BufferedReader(frp);
                    linea = brp.readLine();
                    brp.close();
                    String noR = linea;
                    String inicio = noR.substring(noR.indexOf("|") + 1);
                    String regAc = inicio.substring(inicio.indexOf("|") + 1);
                    String regIn = regAc.substring(regAc.indexOf("|") + 1);
                    
                    inicio = inicio.substring(0,inicio.indexOf("|"));
                    regAc = regAc.substring(0, regAc.indexOf("|"));
                    noR = noR.substring(0,noR.indexOf("|"));
                    
                    int archivos = Integer.valueOf(noR);
                    archivos++;
                    int begin = Integer.valueOf(inicio);
                    int reAc = Integer.valueOf(regAc);
                    reAc++;
                   
                    String primeraLinea = (String) datos.get(begin - 1);
                    
                    if (primeraLinea.compareTo(nuevaLinea) > 0) {
                        //Entonces al ser mayor el nuevo sera el primero y se debe a puntar a él
                        nuevaLinea = ultimoValor + "|1." + ultimoValor + "|" + nuevaLinea + "|" + begin + "|1";
                        
                        TextOut = new FileWriter(ilu, true);
                        TextOut.write(nuevaLinea + "\r\n");
                        TextOut.close();  
                        
                        //Tambien debemos modificar loa valores del desc_indice
                        TextOut = new FileWriter(dilu, false);
                        //NoReg | Reg inicio | RegA | Reg I
                        TextOut.write(archivos+"|" + ultimoValor + "|" + reAc + "|" + regIn);
                        TextOut.close();
                        
                    }else{
                        //Definimos despues de que linea debe ir
                        int aux = siguiente(datos, begin,nuevaLinea);
                        
                        String auxiliar = (String) datos.get(aux);
                        String[] info = auxiliar.split("\\|");
                        String siguienteNuevo = info[3];
                        info[3] = Integer.toString(ultimoValor);
                        String nuevo = info[0] + "|" + info[1] + "|" + info[2] + "|" +info[3] + "|" +info[4];
                        datos.set(aux, nuevo);
                        nuevaLinea = nuevaLinea + "|" + siguienteNuevo + "|1"; 
                        datos.add(nuevaLinea);
                        
                        TextOut = new FileWriter(ilu, false);
                        for (int i = 0; i < datos.size(); i++) {
                            TextOut.write((i+1) + "|1." + (i+1) + "|"+  datos.get(i) + "\r\n");
                        }
                        TextOut.close(); 
                        
                        //Tambien debemos modificar loa valores del desc_indice
                        TextOut = new FileWriter(dilu, false);
                        //NoReg | Reg inicio | RegA | Reg I
                        TextOut.write(archivos+"|" + begin + "|" + reAc + "|" + regIn);
                        TextOut.close();
                        
                    }
                    //Actualizamos lista o master lista
                    Boolean lista = false;
                    List datoS = new ArrayList<String>();
                    frp = new FileReader(l);
                    brp = new BufferedReader(frp);
                    datoS = new ArrayList<String>();
                    while((linea=brp.readLine())!= null){
                        String[] Info = linea.split("\\|");
                        if(Info[0].equals(Lista) && Info[1].equals(user)){
                            lista = true;
                            int numU = Integer.valueOf(Info[3]);
                            numU++;
                            String nueva = Info[0] + "|" + Info[1] + "|" + Info[2] + "|" + numU + "|" + Info[4] + "|1";
                            datoS.add(nueva);
                        }else{
                            datoS.add(linea);
                        }
                    }
                    brp.close();
                    if(lista){
                        //Sobreescribimos en la lista
                        TextOut = new FileWriter(l, false);
                        for (int i = 0; i < datoS.size(); i++) {
                            TextOut.write(datoS.get(i) + "\r\n");
                        }
                        TextOut.close();
                    }else{
                        frp = new FileReader(Ml);
                        brp = new BufferedReader(frp);
                        datoS = new ArrayList<String>();
                        while((linea=brp.readLine())!= null){
                            String [] Info = linea.split("\\|");
                            if(Info[0].equals(Lista) && Info[1].equals(user)){
                                lista = true;
                                int numU = Integer.valueOf(Info[3]);
                                numU++;
                                String nueva = Info[0] + "|" + Info[1] + "|" + Info[2] + "|" + numU + "|" + Info[4] + "|1";
                                datoS.add(nueva);
                            }else{
                                datoS.add(linea);
                            }
                        }
                        brp.close();
                        
                        //Sobreescribimos en Master_lista
                        TextOut = new FileWriter(Ml, false);
                        for (int i = 0; i < datoS.size(); i++) {
                            TextOut.write(datoS.get(i) + "\r\n");
                        }
                        TextOut.close();
                    }
                }
            }catch(Exception e){}
        }
    }//GEN-LAST:event_ConfirmarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarUsuario(user, Lista).setVisible(true);
            }
        });
    }
    
    public static int siguiente(List<String> datos, int begin, String lineaN){
        String info = (String) datos.get(begin -1);
        String[]INFO = info.split("\\|");
        
        int siguiente = Integer.valueOf(INFO[3]);
        if(siguiente != 0)
        {
            String anterior = datos.get(begin -1);
            String next = datos.get(siguiente -1);
            
            if(anterior.compareTo(lineaN) < 0 && next.compareTo(lineaN) > 0){
                //La linea va en medio
                //Anterior apunta a nuevo y nuevo a siguiente
                return begin -1;
            }
            else{//Cuando no va en medio de dos se debe verificar el siguietne
                return siguiente(datos,siguiente,lineaN);
            }
        }else{//En teoria debe ser mayor si o si
            return begin -1;
        }
    }
    
        
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Confirmar;
    private javax.swing.JTextArea Descripcion;
    private javax.swing.JButton Regresar;
    private javax.swing.JList<String> Usuarios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
